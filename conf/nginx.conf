pid         logs/nginx.pid;
error_log   logs/nginx-main_error.log debug;

# Development Mode
master_process      off;
daemon              on;
worker_rlimit_core  2500M;
working_directory   /tmp;
debug_points        abort;

worker_processes    2;

events {
    worker_connections  1024;
    use                 epoll;
}

http {
    access_log      logs/nginx-http_access.log;

    push_stream_shared_memory_size              2000m;
    push_stream_max_channel_id_length           200;
    push_stream_authorized_channels_only        off;

    server {
        listen           9080 default_server;
        # listen         9443 ssl;
        # ssl_certificate      /usr/local/nginx/ssl/server.crt;
        # ssl_certificate_key  /usr/local/nginx/ssl/server.key;
        server_name      localhost;

        location /stats {
            push_stream_channels_statistics;
            push_stream_channels_path               $arg_id;
        }

        location /pub {
            push_stream_publisher                   admin;
            push_stream_channels_path               $arg_id;
            push_stream_store_messages              on;
        }

        location ~ /sub/(.*) {
            push_stream_subscriber                  eventsource;
            push_stream_channels_path               $1;
            push_stream_last_received_message_time  "$arg_time";
            push_stream_last_received_message_tag   "$arg_tag";
            push_stream_message_template            "{\"id\":\"~id~\",\"tid\":\"~channel~\",\"body\":\"~text~\",\"time\":\"~time~\",\"eid\":\"~event-id~\"}";
        }

        location ~ /ws/(.*) {
            # activate websocket mode for this location
            push_stream_subscriber websocket;

            # positional channel path
            push_stream_channels_path                   $1;
            if ($arg_tests = "on") {
              push_stream_channels_path                 "test_$1";
            }

            # store messages in memory
            push_stream_store_messages              on;

            push_stream_websocket_allow_publish     on;

            if ($arg_qs = "on") {
              push_stream_last_received_message_time "$arg_time";
              push_stream_last_received_message_tag  "$arg_tag";
              push_stream_last_event_id              "$arg_eventid";
            }
        }
    }
}
